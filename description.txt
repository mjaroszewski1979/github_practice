/// This file contains practiced commands overview ///

git merge --squash (name of the branch) -> joining all previous commits in one and merging afterwards
git checkout -b <name of new branch>
git switch -c <name of new branch>
git commit -am "<commit message>"
git log --oneline <displays commit hashes>
git reset --hard <commit hash>
git show HEAD
git difftool <older commit ref> <newer commit ref>
git difftool <HEAD~[older]> <HEAD~[newer]>
/// detached head state ///
git checkout <commit ref> -> head pointer now at chosen commit
git checkout <branch name> -> head pointer now at last commit within chosen branch
/// git merge - integrating changes from another branch INTO current local HEAD branch ///
merge branch A into branch B -> 
git checkout branch B 
git merge branch A 
/// git rebase ///
rebase branch B on branch A ->
git checkout branch B 
git rebase branch A 

git rebase -i <revision hash> -> reword to change specified commit message
/// start new branch ///
git branch <name of the new branch> -> starts at the recent head
git branch <name of the new branch> <revision hash> -> starts at the point specified by revision hash
/// rename branch ///
git branch -m <new name> -> current HEAD branch renamed
git branch -m <old name> <new name> -> non HEAD branch renamed
git push origin --delete <old name> -> first delete old/current branch
git push -u origin <new name> -> then pushing local renamed branch
/// tracking branches ///
git checkout -- track origin/<name of the remote branch not present locally>
/// cherry pick ///
git cherry-pick <revision hash from the branch that we want to pick from>
git switch <branch name>
git reset --hard <revision hash> -> removing commit accidently commited to the wrong branch
/// reflog ///
git reflog -> chronological diary of all previous actions, very useful when we want to restore 
accidently deleted commit or branch
/// submodule ///
git submodule add <https...url of library we want to include>
git clone --recurse-submodules <url of third party code that contains other submodules>
/// search & find ///
git log
1. by date: --after="1.1.2023" / --before
2. by message --grep
3. by author --author
4. by file --<filename>
5. by branch <branch-A>
/// alias ///
git config --globa alias.ac '!git add -A && git commit -m' -> adds and commits all changes in current repo
git ac "message" -> to run new alias
/// revert ///
git revert HEAD -> undo most recent commit
git revert <revision hash> -> undo specified commit
/// restore ///
git restore <filename> -> discarding all local changes in the file
git restore --staged <filename> -> use to unstage local chenges in the file( after add, before commit )






